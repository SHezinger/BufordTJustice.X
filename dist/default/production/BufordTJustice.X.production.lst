

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Oct 12 09:31:56 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 09/04/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F46K22 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    58  0000                     
    59 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    60  0000                     
    61 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    62  0000                     
    63                           	psect	nvCOMRAM
    64  000001                     __pnvCOMRAM:
    65                           	callstack 0
    66  000001                     _EUSART1_ErrorHandler:
    67                           	callstack 0
    68  000001                     	ds	2
    69  000003                     _EUSART1_OverrunErrorHandler:
    70                           	callstack 0
    71  000003                     	ds	2
    72  000005                     _EUSART1_FramingErrorHandler:
    73                           	callstack 0
    74  000005                     	ds	2
    75  0000                     _ANSELA	set	3896
    76  0000                     _ANSELE	set	3900
    77  0000                     _ANSELB	set	3897
    78  0000                     _ANSELC	set	3898
    79  0000                     _ANSELD	set	3899
    80  0000                     _OSCTUNE	set	3995
    81  0000                     _OSCCON2	set	4050
    82  0000                     _OSCCON	set	4051
    83  0000                     _TXREG1	set	4013
    84  0000                     _RCREG1	set	4014
    85  0000                     _RCSTA1bits	set	4011
    86  0000                     _TXSTA1bits	set	4012
    87  0000                     _PIR1bits	set	3998
    88  0000                     _SPBRGH1	set	4016
    89  0000                     _SPBRG1	set	4015
    90  0000                     _TXSTA1	set	4012
    91  0000                     _RCSTA1	set	4011
    92  0000                     _BAUDCON1	set	4024
    93  0000                     _INTCONbits	set	4082
    94  0000                     _INTCON2bits	set	4081
    95  0000                     _WPUB	set	3937
    96  0000                     _TRISD	set	3989
    97  0000                     _TRISC	set	3988
    98  0000                     _TRISB	set	3987
    99  0000                     _TRISA	set	3986
   100  0000                     _TRISE	set	3990
   101  0000                     _LATC	set	3979
   102  0000                     _LATB	set	3978
   103  0000                     _LATA	set	3977
   104  0000                     _LATD	set	3980
   105  0000                     _LATE	set	3981
   106                           
   107                           ; #config settings
   108                           
   109                           	psect	cinit
   110  00FF58                     __pcinit:
   111                           	callstack 0
   112  00FF58                     start_initialization:
   113                           	callstack 0
   114  00FF58                     __initialization:
   115                           	callstack 0
   116                           
   117                           ; Clear objects allocated to COMRAM (1 bytes)
   118  00FF58  6A09               	clrf	__pbssCOMRAM& (0+255),c
   119  00FF5A                     end_of_initialization:
   120                           	callstack 0
   121  00FF5A                     __end_of__initialization:
   122                           	callstack 0
   123  00FF5A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   124  00FF5C  6EF8               	movwf	tblptru,c
   125  00FF5E  0100               	movlb	0
   126  00FF60  EFA6  F07F         	goto	_main	;jump to C main() function
   127                           
   128                           	psect	bssCOMRAM
   129  000009                     __pbssCOMRAM:
   130                           	callstack 0
   131  000009                     _eusart1RxLastError:
   132                           	callstack 0
   133  000009                     	ds	1
   134                           
   135                           	psect	cstackCOMRAM
   136  000007                     __pcstackCOMRAM:
   137                           	callstack 0
   138  000007                     EUSART1_SetFramingErrorHandler@interruptHandler:
   139                           	callstack 0
   140  000007                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   141                           	callstack 0
   142  000007                     EUSART1_SetErrorHandler@interruptHandler:
   143                           	callstack 0
   144                           
   145                           ; 2 bytes @ 0x0
   146  000007                     	ds	2
   147  000009                     
   148                           ; 1 bytes @ 0x2
   149 ;;
   150 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   151 ;;
   152 ;; *************** function _main *****************
   153 ;; Defined at:
   154 ;;		line 49 in file "main.c"
   155 ;; Parameters:    Size  Location     Type
   156 ;;		None
   157 ;; Auto vars:     Size  Location     Type
   158 ;;		None
   159 ;; Return value:  Size  Location     Type
   160 ;;                  1    wreg      void 
   161 ;; Registers used:
   162 ;;		wreg, status,2, status,0, cstack
   163 ;; Tracked objects:
   164 ;;		On entry : 0/0
   165 ;;		On exit  : 0/0
   166 ;;		Unchanged: 0/0
   167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   172 ;;Total ram usage:        0 bytes
   173 ;; Hardware stack levels required when called:    3
   174 ;; This function calls:
   175 ;;		_SYSTEM_Initialize
   176 ;; This function is called by:
   177 ;;		Startup code after reset
   178 ;; This function uses a non-reentrant model
   179 ;;
   180                           
   181                           	psect	text0
   182  00FF4C                     __ptext0:
   183                           	callstack 0
   184  00FF4C                     _main:
   185                           	callstack 28
   186  00FF4C                     
   187                           ;main.c: 52:     SYSTEM_Initialize();
   188  00FF4C  ECB9  F07F         	call	_SYSTEM_Initialize	;wreg free
   189  00FF50                     l49:
   190  00FF50  EFA8  F07F         	goto	l49
   191  00FF54  EF00  F000         	goto	start
   192  00FF58                     __end_of_main:
   193                           	callstack 0
   194                           
   195 ;; *************** function _SYSTEM_Initialize *****************
   196 ;; Defined at:
   197 ;;		line 50 in file "mcc_generated_files/mcc.c"
   198 ;; Parameters:    Size  Location     Type
   199 ;;		None
   200 ;; Auto vars:     Size  Location     Type
   201 ;;		None
   202 ;; Return value:  Size  Location     Type
   203 ;;                  1    wreg      void 
   204 ;; Registers used:
   205 ;;		wreg, status,2, status,0, cstack
   206 ;; Tracked objects:
   207 ;;		On entry : 0/0
   208 ;;		On exit  : 0/0
   209 ;;		Unchanged: 0/0
   210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   215 ;;Total ram usage:        0 bytes
   216 ;; Hardware stack levels used:    1
   217 ;; Hardware stack levels required when called:    2
   218 ;; This function calls:
   219 ;;		_EUSART1_Initialize
   220 ;;		_OSCILLATOR_Initialize
   221 ;;		_PIN_MANAGER_Initialize
   222 ;; This function is called by:
   223 ;;		_main
   224 ;; This function uses a non-reentrant model
   225 ;;
   226                           
   227                           	psect	text1
   228  00FF72                     __ptext1:
   229                           	callstack 0
   230  00FF72                     _SYSTEM_Initialize:
   231                           	callstack 28
   232  00FF72                     
   233                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   234  00FF72  ECDF  F07F         	call	_PIN_MANAGER_Initialize	;wreg free
   235                           
   236                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   237  00FF76  ECB2  F07F         	call	_OSCILLATOR_Initialize	;wreg free
   238  00FF7A                     
   239                           ;mcc_generated_files/mcc.c: 55:     EUSART1_Initialize();
   240  00FF7A  ECC0  F07F         	call	_EUSART1_Initialize	;wreg free
   241  00FF7E  0012               	return		;funcret
   242  00FF80                     __end_of_SYSTEM_Initialize:
   243                           	callstack 0
   244                           
   245 ;; *************** function _PIN_MANAGER_Initialize *****************
   246 ;; Defined at:
   247 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;		None
   250 ;; Auto vars:     Size  Location     Type
   251 ;;		None
   252 ;; Return value:  Size  Location     Type
   253 ;;                  1    wreg      void 
   254 ;; Registers used:
   255 ;;		wreg, status,2
   256 ;; Tracked objects:
   257 ;;		On entry : 0/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   265 ;;Total ram usage:        0 bytes
   266 ;; Hardware stack levels used:    1
   267 ;; This function calls:
   268 ;;		Nothing
   269 ;; This function is called by:
   270 ;;		_SYSTEM_Initialize
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274                           	psect	text2
   275  00FFBE                     __ptext2:
   276                           	callstack 0
   277  00FFBE                     _PIN_MANAGER_Initialize:
   278                           	callstack 29
   279  00FFBE                     
   280                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   281  00FFBE  0E00               	movlw	0
   282  00FFC0  6E8D               	movwf	141,c	;volatile
   283                           
   284                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   285  00FFC2  0E00               	movlw	0
   286  00FFC4  6E8C               	movwf	140,c	;volatile
   287                           
   288                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   289  00FFC6  0E00               	movlw	0
   290  00FFC8  6E89               	movwf	137,c	;volatile
   291                           
   292                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   293  00FFCA  0E00               	movlw	0
   294  00FFCC  6E8A               	movwf	138,c	;volatile
   295                           
   296                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x04;
   297  00FFCE  0E04               	movlw	4
   298  00FFD0  6E8B               	movwf	139,c	;volatile
   299                           
   300                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   301  00FFD2  0E07               	movlw	7
   302  00FFD4  6E96               	movwf	150,c	;volatile
   303                           
   304                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x00;
   305  00FFD6  0E00               	movlw	0
   306  00FFD8  6E92               	movwf	146,c	;volatile
   307  00FFDA                     
   308                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
   309  00FFDA  6893               	setf	147,c	;volatile
   310                           
   311                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xB8;
   312  00FFDC  0EB8               	movlw	184
   313  00FFDE  6E94               	movwf	148,c	;volatile
   314                           
   315                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
   316  00FFE0  0E00               	movlw	0
   317  00FFE2  6E95               	movwf	149,c	;volatile
   318  00FFE4                     
   319                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
   320  00FFE4  010F               	movlb	15	; () banked
   321  00FFE6  693B               	setf	59,b	;volatile
   322                           
   323                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3C;
   324  00FFE8  0E3C               	movlw	60
   325  00FFEA  6F3A               	movwf	58,b	;volatile
   326                           
   327                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
   328  00FFEC  0E3F               	movlw	63
   329  00FFEE  6F39               	movwf	57,b	;volatile
   330                           
   331                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
   332  00FFF0  0E07               	movlw	7
   333  00FFF2  6F3C               	movwf	60,b	;volatile
   334                           
   335                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
   336  00FFF4  0E2F               	movlw	47
   337  00FFF6  6F38               	movwf	56,b	;volatile
   338                           
   339                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
   340  00FFF8  0E00               	movlw	0
   341  00FFFA  6E61               	movwf	97,c	;volatile
   342  00FFFC                     
   343                           ; BSR set to: 15
   344                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
   345  00FFFC  8EF1               	bsf	241,7,c	;volatile
   346  00FFFE                     
   347                           ; BSR set to: 15
   348  00FFFE  0012               	return		;funcret
   349  010000                     __end_of_PIN_MANAGER_Initialize:
   350                           	callstack 0
   351                           
   352 ;; *************** function _OSCILLATOR_Initialize *****************
   353 ;; Defined at:
   354 ;;		line 58 in file "mcc_generated_files/mcc.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;		None
   357 ;; Auto vars:     Size  Location     Type
   358 ;;		None
   359 ;; Return value:  Size  Location     Type
   360 ;;                  1    wreg      void 
   361 ;; Registers used:
   362 ;;		wreg, status,2
   363 ;; Tracked objects:
   364 ;;		On entry : 0/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   372 ;;Total ram usage:        0 bytes
   373 ;; Hardware stack levels used:    1
   374 ;; This function calls:
   375 ;;		Nothing
   376 ;; This function is called by:
   377 ;;		_SYSTEM_Initialize
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           	psect	text3
   382  00FF64                     __ptext3:
   383                           	callstack 0
   384  00FF64                     _OSCILLATOR_Initialize:
   385                           	callstack 29
   386  00FF64                     
   387                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x30;
   388  00FF64  0E30               	movlw	48
   389  00FF66  6ED3               	movwf	211,c	;volatile
   390                           
   391                           ;mcc_generated_files/mcc.c: 63:     OSCCON2 = 0x04;
   392  00FF68  0E04               	movlw	4
   393  00FF6A  6ED2               	movwf	210,c	;volatile
   394                           
   395                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
   396  00FF6C  0E00               	movlw	0
   397  00FF6E  6E9B               	movwf	155,c	;volatile
   398  00FF70  0012               	return		;funcret
   399  00FF72                     __end_of_OSCILLATOR_Initialize:
   400                           	callstack 0
   401                           
   402 ;; *************** function _EUSART1_Initialize *****************
   403 ;; Defined at:
   404 ;;		line 66 in file "mcc_generated_files/eusart1.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, status,2, status,0, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; Hardware stack levels required when called:    1
   425 ;; This function calls:
   426 ;;		_EUSART1_SetErrorHandler
   427 ;;		_EUSART1_SetFramingErrorHandler
   428 ;;		_EUSART1_SetOverrunErrorHandler
   429 ;; This function is called by:
   430 ;;		_SYSTEM_Initialize
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           	psect	text4
   435  00FF80                     __ptext4:
   436                           	callstack 0
   437  00FF80                     _EUSART1_Initialize:
   438                           	callstack 28
   439  00FF80                     
   440                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
   441  00FF80  0E08               	movlw	8
   442  00FF82  6EB8               	movwf	184,c	;volatile
   443                           
   444                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
   445  00FF84  0E90               	movlw	144
   446  00FF86  6EAB               	movwf	171,c	;volatile
   447                           
   448                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
   449  00FF88  0E24               	movlw	36
   450  00FF8A  6EAC               	movwf	172,c	;volatile
   451                           
   452                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x19;
   453  00FF8C  0E19               	movlw	25
   454  00FF8E  6EAF               	movwf	175,c	;volatile
   455                           
   456                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
   457  00FF90  0E00               	movlw	0
   458  00FF92  6EB0               	movwf	176,c	;volatile
   459  00FF94                     
   460                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
   461  00FF94  0E00               	movlw	0
   462  00FF96  6E07               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
   463  00FF98  0E00               	movlw	0
   464  00FF9A  6E08               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
   465  00FF9C  EC9C  F07F         	call	_EUSART1_SetFramingErrorHandler	;wreg free
   466  00FFA0                     
   467                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
   468  00FFA0  0E00               	movlw	0
   469  00FFA2  6E07               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
   470  00FFA4  0E00               	movlw	0
   471  00FFA6  6E08               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
   472  00FFA8  ECA1  F07F         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
   473  00FFAC                     
   474                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
   475  00FFAC  0E00               	movlw	0
   476  00FFAE  6E07               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
   477  00FFB0  0E00               	movlw	0
   478  00FFB2  6E08               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
   479  00FFB4  EC97  F07F         	call	_EUSART1_SetErrorHandler	;wreg free
   480  00FFB8                     
   481                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
   482  00FFB8  0E00               	movlw	0
   483  00FFBA  6E09               	movwf	_eusart1RxLastError^0,c	;volatile
   484  00FFBC  0012               	return		;funcret
   485  00FFBE                     __end_of_EUSART1_Initialize:
   486                           	callstack 0
   487                           
   488 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
   489 ;; Defined at:
   490 ;;		line 161 in file "mcc_generated_files/eusart1.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   493 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   508 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;Total ram usage:        2 bytes
   510 ;; Hardware stack levels used:    1
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		_EUSART1_Initialize
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           	psect	text5
   519  00FF42                     __ptext5:
   520                           	callstack 0
   521  00FF42                     _EUSART1_SetOverrunErrorHandler:
   522                           	callstack 28
   523  00FF42                     
   524                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
   525  00FF42  C007  F003         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
   526  00FF46  C008  F004         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
   527  00FF4A  0012               	return		;funcret
   528  00FF4C                     __end_of_EUSART1_SetOverrunErrorHandler:
   529                           	callstack 0
   530                           
   531 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
   532 ;; Defined at:
   533 ;;		line 157 in file "mcc_generated_files/eusart1.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   536 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   552 ;;Total ram usage:        2 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; This function calls:
   555 ;;		Nothing
   556 ;; This function is called by:
   557 ;;		_EUSART1_Initialize
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text6
   562  00FF38                     __ptext6:
   563                           	callstack 0
   564  00FF38                     _EUSART1_SetFramingErrorHandler:
   565                           	callstack 28
   566  00FF38                     
   567                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
   568  00FF38  C007  F005         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
   569  00FF3C  C008  F006         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
   570  00FF40  0012               	return		;funcret
   571  00FF42                     __end_of_EUSART1_SetFramingErrorHandler:
   572                           	callstack 0
   573                           
   574 ;; *************** function _EUSART1_SetErrorHandler *****************
   575 ;; Defined at:
   576 ;;		line 165 in file "mcc_generated_files/eusart1.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   579 ;;		 -> EUSART1_DefaultErrorHandler(1), 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;Total ram usage:        2 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_EUSART1_Initialize
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text7
   605  00FF2E                     __ptext7:
   606                           	callstack 0
   607  00FF2E                     _EUSART1_SetErrorHandler:
   608                           	callstack 28
   609  00FF2E                     
   610                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
   611  00FF2E  C007  F001         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
   612  00FF32  C008  F002         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
   613  00FF36  0012               	return		;funcret
   614  00FF38                     __end_of_EUSART1_SetErrorHandler:
   615                           	callstack 0
   616  0000                     
   617                           	psect	rparam
   618  0000                     
   619                           	psect	idloc
   620                           
   621                           ;Config register IDLOC0 @ 0x200000
   622                           ;	unspecified, using default values
   623  200000                     	org	2097152
   624  200000  FF                 	db	255
   625                           
   626                           ;Config register IDLOC1 @ 0x200001
   627                           ;	unspecified, using default values
   628  200001                     	org	2097153
   629  200001  FF                 	db	255
   630                           
   631                           ;Config register IDLOC2 @ 0x200002
   632                           ;	unspecified, using default values
   633  200002                     	org	2097154
   634  200002  FF                 	db	255
   635                           
   636                           ;Config register IDLOC3 @ 0x200003
   637                           ;	unspecified, using default values
   638  200003                     	org	2097155
   639  200003  FF                 	db	255
   640                           
   641                           ;Config register IDLOC4 @ 0x200004
   642                           ;	unspecified, using default values
   643  200004                     	org	2097156
   644  200004  FF                 	db	255
   645                           
   646                           ;Config register IDLOC5 @ 0x200005
   647                           ;	unspecified, using default values
   648  200005                     	org	2097157
   649  200005  FF                 	db	255
   650                           
   651                           ;Config register IDLOC6 @ 0x200006
   652                           ;	unspecified, using default values
   653  200006                     	org	2097158
   654  200006  FF                 	db	255
   655                           
   656                           ;Config register IDLOC7 @ 0x200007
   657                           ;	unspecified, using default values
   658  200007                     	org	2097159
   659  200007  FF                 	db	255
   660                           
   661                           	psect	config
   662                           
   663                           ; Padding undefined space
   664  300000                     	org	3145728
   665  300000  FF                 	db	255
   666                           
   667                           ;Config register CONFIG1H @ 0x300001
   668                           ;	Oscillator Selection bits
   669                           ;	FOSC = INTIO67, Internal oscillator block
   670                           ;	4X PLL Enable
   671                           ;	PLLCFG = OFF, Oscillator used directly
   672                           ;	Primary clock enable bit
   673                           ;	PRICLKEN = ON, Primary clock is always enabled
   674                           ;	Fail-Safe Clock Monitor Enable bit
   675                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   676                           ;	Internal/External Oscillator Switchover bit
   677                           ;	IESO = OFF, Oscillator Switchover mode disabled
   678  300001                     	org	3145729
   679  300001  28                 	db	40
   680                           
   681                           ;Config register CONFIG2L @ 0x300002
   682                           ;	Power-up Timer Enable bit
   683                           ;	PWRTEN = OFF, Power up timer disabled
   684                           ;	Brown-out Reset Enable bits
   685                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   686                           ;	Brown Out Reset Voltage bits
   687                           ;	BORV = 190, VBOR set to 1.90 V nominal
   688  300002                     	org	3145730
   689  300002  1F                 	db	31
   690                           
   691                           ;Config register CONFIG2H @ 0x300003
   692                           ;	Watchdog Timer Enable bits
   693                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   694                           ;	Watchdog Timer Postscale Select bits
   695                           ;	WDTPS = 32768, 1:32768
   696  300003                     	org	3145731
   697  300003  3C                 	db	60
   698                           
   699                           ; Padding undefined space
   700  300004                     	org	3145732
   701  300004  FF                 	db	255
   702                           
   703                           ;Config register CONFIG3H @ 0x300005
   704                           ;	CCP2 MUX bit
   705                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   706                           ;	PORTB A/D Enable bit
   707                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   708                           ;	P3A/CCP3 Mux bit
   709                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   710                           ;	HFINTOSC Fast Start-up
   711                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   712                           ;	Timer3 Clock input mux bit
   713                           ;	T3CMX = PORTC0, T3CKI is on RC0
   714                           ;	ECCP2 B output mux bit
   715                           ;	P2BMX = PORTD2, P2B is on RD2
   716                           ;	MCLR Pin Enable bit
   717                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   718  300005                     	org	3145733
   719  300005  BF                 	db	191
   720                           
   721                           ;Config register CONFIG4L @ 0x300006
   722                           ;	Stack Full/Underflow Reset Enable bit
   723                           ;	STVREN = ON, Stack full/underflow will cause Reset
   724                           ;	Single-Supply ICSP Enable bit
   725                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   726                           ;	Extended Instruction Set Enable bit
   727                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   728                           ;	Background Debug
   729                           ;	DEBUG = OFF, Disabled
   730  300006                     	org	3145734
   731  300006  85                 	db	133
   732                           
   733                           ; Padding undefined space
   734  300007                     	org	3145735
   735  300007  FF                 	db	255
   736                           
   737                           ;Config register CONFIG5L @ 0x300008
   738                           ;	Code Protection Block 0
   739                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   740                           ;	Code Protection Block 1
   741                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   742                           ;	Code Protection Block 2
   743                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   744                           ;	Code Protection Block 3
   745                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   746  300008                     	org	3145736
   747  300008  0F                 	db	15
   748                           
   749                           ;Config register CONFIG5H @ 0x300009
   750                           ;	Boot Block Code Protection bit
   751                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   752                           ;	Data EEPROM Code Protection bit
   753                           ;	CPD = OFF, Data EEPROM not code-protected
   754  300009                     	org	3145737
   755  300009  C0                 	db	192
   756                           
   757                           ;Config register CONFIG6L @ 0x30000A
   758                           ;	Write Protection Block 0
   759                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   760                           ;	Write Protection Block 1
   761                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   762                           ;	Write Protection Block 2
   763                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   764                           ;	Write Protection Block 3
   765                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   766  30000A                     	org	3145738
   767  30000A  0F                 	db	15
   768                           
   769                           ;Config register CONFIG6H @ 0x30000B
   770                           ;	Configuration Register Write Protection bit
   771                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   772                           ;	Boot Block Write Protection bit
   773                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   774                           ;	Data EEPROM Write Protection bit
   775                           ;	WRTD = OFF, Data EEPROM not write-protected
   776  30000B                     	org	3145739
   777  30000B  E0                 	db	224
   778                           
   779                           ;Config register CONFIG7L @ 0x30000C
   780                           ;	Table Read Protection Block 0
   781                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   782                           ;	Table Read Protection Block 1
   783                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   784                           ;	Table Read Protection Block 2
   785                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   786                           ;	Table Read Protection Block 3
   787                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   788  30000C                     	org	3145740
   789  30000C  0F                 	db	15
   790                           
   791                           ;Config register CONFIG7H @ 0x30000D
   792                           ;	Boot Block Table Read Protection bit
   793                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   794  30000D                     	org	3145741
   795  30000D  40                 	db	64
   796                           tosu	equ	0xFFF
   797                           tosh	equ	0xFFE
   798                           tosl	equ	0xFFD
   799                           stkptr	equ	0xFFC
   800                           pclatu	equ	0xFFB
   801                           pclath	equ	0xFFA
   802                           pcl	equ	0xFF9
   803                           tblptru	equ	0xFF8
   804                           tblptrh	equ	0xFF7
   805                           tblptrl	equ	0xFF6
   806                           tablat	equ	0xFF5
   807                           prodh	equ	0xFF4
   808                           prodl	equ	0xFF3
   809                           indf0	equ	0xFEF
   810                           postinc0	equ	0xFEE
   811                           postdec0	equ	0xFED
   812                           preinc0	equ	0xFEC
   813                           plusw0	equ	0xFEB
   814                           fsr0h	equ	0xFEA
   815                           fsr0l	equ	0xFE9
   816                           wreg	equ	0xFE8
   817                           indf1	equ	0xFE7
   818                           postinc1	equ	0xFE6
   819                           postdec1	equ	0xFE5
   820                           preinc1	equ	0xFE4
   821                           plusw1	equ	0xFE3
   822                           fsr1h	equ	0xFE2
   823                           fsr1l	equ	0xFE1
   824                           bsr	equ	0xFE0
   825                           indf2	equ	0xFDF
   826                           postinc2	equ	0xFDE
   827                           postdec2	equ	0xFDD
   828                           preinc2	equ	0xFDC
   829                           plusw2	equ	0xFDB
   830                           fsr2h	equ	0xFDA
   831                           fsr2l	equ	0xFD9
   832                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     294
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       9       1        9.5%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       9      12        0.0%
DATA                 0      0       9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Oct 12 09:31:56 2020

                                            l50 FF50                                              l39 FFFE  
                                            l49 FF50                                              l95 FFBC  
                                           l140 FF36                                             l134 FF40  
                                           l137 FF4A                                             l155 FF7E  
                                           l158 FF70                                             l902 FF38  
                                           l910 FF94                                             l904 FF42  
                                           l912 FFA0                                             l840 FFBE  
                                           l920 FF7A                                             l906 FF2E  
                                           l914 FFAC                                             l842 FFDA  
                                           l922 FF4C                                             l916 FFB8  
                                           l908 FF80                                             l844 FFE4  
                                           l846 FFFC                                             l918 FF72  
                                           l858 FF64                                      _TXSTA1bits 000FAC  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _LATD 000F8C  
                                          _LATE 000F8D                                            _WPUB 000F61  
                                          _main FF4C                                            start 0000  
                                  ___param_bank 000000                  __size_of_OSCILLATOR_Initialize 000E  
                 __end_of_OSCILLATOR_Initialize FF72                                           ?_main 0007  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization FF58                      __end_of_EUSART1_Initialize FFBE  
                                  __end_of_main FF58                                          ??_main 0009  
                                 __activetblptr 000002                                          _ANSELA 000F38  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _ANSELD 000F3B                                          _ANSELE 000F3C  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                      ?_EUSART1_SetErrorHandler 0007                ??_EUSART1_SetOverrunErrorHandler 0009  
               ?_EUSART1_SetOverrunErrorHandler 0007                                          tblptru 000FF8  
                             _SYSTEM_Initialize FF72                                      __accesstop 0060  
                       __end_of__initialization FF5A                              ?_SYSTEM_Initialize 0007  
                                 ___rparam_used 000001                                  __pcstackCOMRAM 0007  
                           ??_SYSTEM_Initialize 0009                       __end_of_SYSTEM_Initialize FF80  
                                    __pnvCOMRAM 0001                 __end_of_EUSART1_SetErrorHandler FF38  
        __end_of_EUSART1_SetFramingErrorHandler FF42         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler FF38                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       __Hparam 0000                                         __Lparam 0000  
                                       __pcinit FF58                                         __ramtop 1000  
                                       __ptext0 FF4C                                         __ptext1 FF72  
                                       __ptext2 FFBE                                         __ptext3 FF64  
                                       __ptext4 FF80                                         __ptext5 FF42  
                                       __ptext6 FF38                                         __ptext7 FF2E  
                         _OSCILLATOR_Initialize FF64                              _EUSART1_Initialize FF80  
                      ??_PIN_MANAGER_Initialize 0007                      __size_of_SYSTEM_Initialize 000E  
                          end_of_initialization FF5A                             ?_EUSART1_Initialize 0007  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 0003  
                          ??_EUSART1_Initialize 0009                __size_of_EUSART1_SetErrorHandler 000A  
                        ?_OSCILLATOR_Initialize 0007                             start_initialization FF58  
               __size_of_PIN_MANAGER_Initialize 0042                                     __pbssCOMRAM 0009  
              ??_EUSART1_SetFramingErrorHandler 0009                 ?_EUSART1_SetFramingErrorHandler 0007  
                        _PIN_MANAGER_Initialize FFBE                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                            _EUSART1_ErrorHandler 0001  
                       _EUSART1_SetErrorHandler FF2E         EUSART1_SetErrorHandler@interruptHandler 0007  
                                      _PIR1bits 000F9E                                     _INTCON2bits 000FF1  
                                      __Hrparam 0000                                        __Lrparam 0000  
                       ??_OSCILLATOR_Initialize 0007                     __size_of_EUSART1_Initialize 003E  
                     ??_EUSART1_SetErrorHandler 0009                     _EUSART1_DefaultErrorHandler 000000  
                                 __size_of_main 000C  EUSART1_SetOverrunErrorHandler@interruptHandler 0007  
                   _EUSART1_FramingErrorHandler 0005                                      _INTCONbits 000FF2  
                       ?_PIN_MANAGER_Initialize 0007          __end_of_EUSART1_SetOverrunErrorHandler FF4C  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler FF42  
                                    _RCSTA1bits 000FAB  EUSART1_SetFramingErrorHandler@interruptHandler 0007  
                            _eusart1RxLastError 0009                  __end_of_PIN_MANAGER_Initialize 0000  
